# Custom Java runtime using jlink in a multi-stage container build
FROM eclipse-temurin:17 as jre-build

# Create a custom Java runtime
RUN $JAVA_HOME/bin/jlink \
         --add-modules jdk.unsupported,java.base,java.sql,java.naming,java.desktop,java.management,java.security.jgss,java.instrument \
         --strip-debug \
         --no-man-pages \
         --no-header-files \
         --compress=2 \
         --output /javaruntime

# Define your base image
FROM debian:stretch-slim
ENV JAVA_HOME=/opt/java/openjdk
ENV PATH "${JAVA_HOME}/bin:${PATH}"
COPY --from=jre-build /javaruntime $JAVA_HOME

RUN mkdir /opt/app
COPY target/*.jar /opt/app/app.jar

RUN apk add curl
#Set the working directory inside the container
VOLUME /tmp
#Expose the port your application listen on
EXPOSE 8080
# Copy the Spring Boot jar file into the container
ADD target/aws-deploy-springboot-service.jar aws-deploy-springboot-service.jar
# Command to run the application
ENTRYPOINT ["java","-jar","/aws-deploy-springboot-service.jar"]
